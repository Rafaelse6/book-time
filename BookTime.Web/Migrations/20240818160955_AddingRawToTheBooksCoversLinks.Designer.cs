// <auto-generated />
using BookTime.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookTime.Web.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20240818160955_AddingRawToTheBooksCoversLinks")]
    partial class AddingRawToTheBooksCoversLinks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookTime.Web.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Frank Herbert",
                            Slug = "frank-herbert"
                        },
                        new
                        {
                            Id = 2,
                            Name = "J.K. Rowling",
                            Slug = "j-k-rowling"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Stephen King",
                            Slug = "stephen-king"
                        },
                        new
                        {
                            Id = 4,
                            Name = "George Orwell",
                            Slug = "george-orwell"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Aldous Huxley",
                            Slug = "aldous-huxley"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ray Bradbury",
                            Slug = "ray-bradbury"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Margaret Atwood",
                            Slug = "margaret-atwood"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ursula K. Le Guin",
                            Slug = "ursula-k-le-guin"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Arthur C. Clarke",
                            Slug = "arthur-c-clarke"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Isaac Asimov",
                            Slug = "isaac-asimov"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Robert Heinlein",
                            Slug = "robert-heinlein"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Orson Scott Card",
                            Slug = "orson-scott-card"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Philip K. Dick",
                            Slug = "philip-k-dick"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Haruki Murakami",
                            Slug = "haruki-murakami"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Gabriel Garc�a M�rquez",
                            Slug = "gabriel-garcia-marquez"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Toni Morrison",
                            Slug = "toni-morrison"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Octavia Butler",
                            Slug = "octavia-butler"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Maya Angelou",
                            Slug = "maya-angelou"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Neil Gaiman",
                            Slug = "neil-gaiman"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Terry Pratchett",
                            Slug = "terry-pratchett"
                        });
                });

            modelBuilder.Entity("BookTime.Web.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(180)
                        .IsUnicode(false)
                        .HasColumnType("varchar(180)");

                    b.Property<int>("NumPages")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "A classic sci-fi novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/dune.jpg",
                            NumPages = 528,
                            Title = "Dune"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Description = "A magical adventure.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/harry-potter.jpg",
                            NumPages = 306,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Description = "A horror classic.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/the-shining.jpg",
                            NumPages = 447,
                            Title = "The Shining"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Description = "A dystopian novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/1984.jpg",
                            NumPages = 328,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            Description = "A satirical novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/brave-new-world.jpg",
                            NumPages = 312,
                            Title = "Brave New World"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            Description = "A dystopian novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/fahrenheit.jpg",
                            NumPages = 256,
                            Title = "Fahrenheit 451"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 7,
                            Description = "A dystopian novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/the-handmaids-tale.jpg",
                            NumPages = 310,
                            Title = "The Handmaid's Tale"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 8,
                            Description = "A science fiction novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/the-left-hand-of-darkness.jpg",
                            NumPages = 296,
                            Title = "The Left Hand of Darkness"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 9,
                            Description = "A science fiction novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/2001.jpg",
                            NumPages = 304,
                            Title = "2001: A Space Odyssey"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 10,
                            Description = "A science fiction novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/foundation.jpg",
                            NumPages = 464,
                            Title = "Foundation"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 11,
                            Description = "A science fiction novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/stranger-in-a-strange-land.jpg",
                            NumPages = 392,
                            Title = "Stranger in a Strange Land"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 12,
                            Description = "A science fiction novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/enders-game.jpg",
                            NumPages = 352,
                            Title = "Ender's Game"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 13,
                            Description = "A science fiction novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/do-androids-dream.jpg",
                            NumPages = 224,
                            Title = "Do Androids Dream of Electric Sheep?"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 14,
                            Description = "A magical realism novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/kafka-on-the-shore.jpg",
                            NumPages = 464,
                            Title = "Kafka on the Shore"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 15,
                            Description = "A magical realism novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/one-hundred-years.jpg",
                            NumPages = 428,
                            Title = "One Hundred Years of Solitude"
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 16,
                            Description = "A historical fiction novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/beloved.jpg",
                            NumPages = 320,
                            Title = "Beloved"
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 17,
                            Description = "A science fiction novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/kindred.jpg",
                            NumPages = 256,
                            Title = "Kindred"
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 18,
                            Description = "A memoir.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/i-know-why.jpg",
                            NumPages = 272,
                            Title = "I Know Why the Caged Bird Sings"
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 19,
                            Description = "A fantasy novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/american-gods.jpg",
                            NumPages = 466,
                            Title = "American Gods"
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 20,
                            Description = "A fantasy novel.",
                            Image = "https://raw.githubusercontent.com/Rafaelse6/books-data/main/discworld.jpg",
                            NumPages = 384,
                            Title = "Discworld"
                        });
                });

            modelBuilder.Entity("BookTime.Web.Entities.Genre", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<bool>("WasRead")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Name = "Science Fiction",
                            Slug = "science-fiction",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)2,
                            Name = "Fantasy",
                            Slug = "fantasy",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)3,
                            Name = "Mystery",
                            Slug = "mystery",
                            WasRead = true
                        },
                        new
                        {
                            Id = (short)4,
                            Name = "Horror",
                            Slug = "horror",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)5,
                            Name = "Romance",
                            Slug = "romance",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)6,
                            Name = "Thriller",
                            Slug = "thriller",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)7,
                            Name = "Dystopian",
                            Slug = "dystopian",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)8,
                            Name = "Historical Fiction",
                            Slug = "historical-fiction",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)9,
                            Name = "Contemporary",
                            Slug = "contemporary",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)10,
                            Name = "Young Adult",
                            Slug = "young-adult",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)11,
                            Name = "Nonfiction",
                            Slug = "nonfiction",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)12,
                            Name = "Biography",
                            Slug = "biography",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)13,
                            Name = "Autobiography",
                            Slug = "autobiography",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)14,
                            Name = "Memoir",
                            Slug = "memoir",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)15,
                            Name = "Self-Help",
                            Slug = "self-help",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)16,
                            Name = "Cookbooks",
                            Slug = "cookbooks",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)17,
                            Name = "Travel",
                            Slug = "travel",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)18,
                            Name = "Science",
                            Slug = "science",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)19,
                            Name = "History",
                            Slug = "history",
                            WasRead = false
                        },
                        new
                        {
                            Id = (short)20,
                            Name = "Philosophy",
                            Slug = "philosophy",
                            WasRead = false
                        });
                });

            modelBuilder.Entity("BookTime.Web.Entities.GenreBooks", b =>
                {
                    b.Property<short>("GenreId")
                        .HasColumnType("smallint");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("GenreId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("GenreBooks");

                    b.HasData(
                        new
                        {
                            GenreId = (short)1,
                            BookId = 1
                        },
                        new
                        {
                            GenreId = (short)2,
                            BookId = 2
                        },
                        new
                        {
                            GenreId = (short)3,
                            BookId = 3
                        },
                        new
                        {
                            GenreId = (short)4,
                            BookId = 4
                        },
                        new
                        {
                            GenreId = (short)5,
                            BookId = 5
                        },
                        new
                        {
                            GenreId = (short)6,
                            BookId = 6
                        },
                        new
                        {
                            GenreId = (short)7,
                            BookId = 7
                        },
                        new
                        {
                            GenreId = (short)1,
                            BookId = 8
                        },
                        new
                        {
                            GenreId = (short)1,
                            BookId = 9
                        },
                        new
                        {
                            GenreId = (short)1,
                            BookId = 10
                        },
                        new
                        {
                            GenreId = (short)1,
                            BookId = 11
                        },
                        new
                        {
                            GenreId = (short)1,
                            BookId = 12
                        },
                        new
                        {
                            GenreId = (short)1,
                            BookId = 13
                        },
                        new
                        {
                            GenreId = (short)2,
                            BookId = 14
                        },
                        new
                        {
                            GenreId = (short)2,
                            BookId = 15
                        },
                        new
                        {
                            GenreId = (short)8,
                            BookId = 16
                        },
                        new
                        {
                            GenreId = (short)7,
                            BookId = 17
                        },
                        new
                        {
                            GenreId = (short)11,
                            BookId = 18
                        },
                        new
                        {
                            GenreId = (short)2,
                            BookId = 19
                        },
                        new
                        {
                            GenreId = (short)2,
                            BookId = 20
                        });
                });

            modelBuilder.Entity("BookTime.Web.Entities.Book", b =>
                {
                    b.HasOne("BookTime.Web.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BookTime.Web.Entities.GenreBooks", b =>
                {
                    b.HasOne("BookTime.Web.Entities.Book", "Book")
                        .WithMany("BooksGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookTime.Web.Entities.Genre", "Genre")
                        .WithMany("GenreBooks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("BookTime.Web.Entities.Book", b =>
                {
                    b.Navigation("BooksGenres");
                });

            modelBuilder.Entity("BookTime.Web.Entities.Genre", b =>
                {
                    b.Navigation("GenreBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
